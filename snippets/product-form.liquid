{%- comment -%}
Those are the option names for which we automatically detect swatch. For the color, we use them to display a swatch, while
for size, we use it to display a size chart (if applicable)
{%- endcomment -%}

{%- assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' -%}
{%- assign size_label = 'size,taille,größe,tamanho,tamaño,koko,サイズ' | split: ',' -%}

{%- assign size_chart_page = '' -%}
{%- assign product_popovers = '' -%}
{%- assign show_option_label = false -%}

{%- assign selected_variant = product.selected_or_first_available_variant -%}

{%- assign showSizeRadio = false -%}
{% for tag in product.tags %}
  {% assign lowercaseTag = tag | downcase %}
  {% if lowercaseTag contains 'surfboards longboard' or lowercaseTag contains 'surfboards mid length' or lowercaseTag contains 'surfboards shortboard' or lowercaseTag contains 'surfboards stand up paddle board' or lowercaseTag contains 'surfboards specialty'  %}
    {%- assign showSizeRadio = true -%}
  {% endif %}
{% endfor %}

{%- capture sizeRadio -%}
  <div class="custom-radio-container">
    <div class="custom-radio-header">
      <div>Size</div>
      <div>Fin System</div>
      <div>In Stock</div>
    </div>
    <div class="custom-radio-content">
      {%- assign excluded = '' | split: '|' -%}
      {%- liquid
        assign fourSizesMin = "4'0,4'1,4'2,4'3,4'4,4'5,4'6,4'7,4'8,4'9"
        assign fourSizesMax = "4'10,4'11,4'12"
        assign fourItems = ''
        assign fourExcess = ''

        assign fiveSizesMin = "5'0,5'1,5'2,5'3,5'4,5'5,5'6,5'7,5'8,5'9"
        assign fiveSizesMax = "5'10,5'11,5'12"
        assign fiveItems = ''
        assign fiveExcess = ''

        assign sixSizesMin = "6'0,6'1,6'2,6'3,6'4,6'5,6'6,6'7,6'8,6'9"
        assign sixSizesMax = "6'10,6'11,6'12"
        assign sixItems = ''
        assign sixExcess = ''

        assign sevenSizesMin = "7'0,7'1,7'2,7'3,7'4,7'5,7'6,7'7,7'8,7'9"
        assign sevenSizesMax = "7'10,7'11,7'12"
        assign sevenItems = ''
        assign sevenExcess = ''

        assign eightSizesMin = "8'0,8'1,8'2,8'3,8'4,8'5,8'6,8'7,8'8,8'9"
        assign eightSizesMax = "8'10,8'11,8'12"
        assign eightItems = ''
        assign eightExcess = ''
      -%}

      {%- assign sortedProductVariants = product.variants | sort_natural: "option2" -%}
      <template id="sorted-product-variants">
        {{ sortedProductVariants | json }}
      </template>
      {% for variant in sortedProductVariants %}
        {%- assign option2 = variant.option2 -%}
        {%- assign hasAvailable = product.variants | where: "option2", option2 | where: "available", true -%}
        {%- unless excluded contains option2 -%}
          {%- assign excluded = excluded | join: '|' | append: '|' | append: option2 | split: '|' -%}
          {% assign option1Array = variant.option2 | split: '=' %}
          {% assign isAvailable = variant.available %}
          {% assign isSelectedVariant = false %}
          {% if  selected_variant.id == variant.id %}
            {% assign isSelectedVariant = true %}
          {% endif %}
          {%- capture customRadioItem -%}
            <div class="custom-radio-item">
              <input 
                type="radio"
                name="customSizeRadio"
                id="customSizeRadio{{forloop.index}}"
                value="{{ variant.id }}"
                />
              <label for="customSizeRadio{{forloop.index}}">
                {% assign code = option1Array[1] %}
                {% assign readableCode = 'not matched' %}
                {% if code == "FCS1" %}{% assign readableCode = "FCS 1" %}{% endif %}
                {% if code == "FNLS" %}{% assign readableCode = "FINLESS" %}{% endif %}
                {% if code == "BOX" %}{% assign readableCode = "FIN BOX" %}{% endif %}
                {% if code == "GLA" %}{% assign readableCode = "GLASS ON" %}{% endif %}
                {% if code == "FCS" %}{% assign readableCode = "FCS 2" %}{% endif %}
                {% if code == "FUT" %}{% assign readableCode = "FUTURES" %}{% endif %}
                {% if readableCode == 'not matched'%}{% assign readableCode = code %}{% endif %}
                <span class="option-1-array">{{ option1Array[0] }}</span>
                <span id={{ code }}>{{ readableCode }}</span>
                <span>
                  {% if hasAvailable.size > 0 %}
                    In Stock
                  {% else %}
                    Out of Stock
                  {% endif %}
                </span>
              </label>
            </div>
          {%- endcapture -%}

          {%- comment -%}
            Add an additional manual sorting + grouping since the filter "sort" or "sort_natural" 
            still displays the 5'10 as the first item instead of 5'2
          {%- endcomment -%}

          {%- comment -%}Get the first 4 letters and strip the spaces{%- endcomment -%}
          {%- assign startsWith = option2 | slice: 0, 4 | strip -%}
          
          {%- comment -%}
            Check if the option starts with 4' up to 8'

            The if statements will check if the option2 starts with a value from 4'0 to 4'9, etc.
            If yes, then it will append it to a variable for later use
            otherwhise it still check if it's value is from 4'10 to 4'12 then
            it will append to a variable to later use
          {%- endcomment -%}
          {%- if startsWith contains "4'" -%}
            {%- if fourSizesMin contains startsWith -%}
              {%- assign fourItems = fourItems | append: customRadioItem -%}
            {%- elsif fourSizesMax contains startsWith -%}
              {%- assign fourExcess = fourExcess | append: customRadioItem -%}
            {%- endif -%}

          {%- elsif startsWith contains "5'" -%}
            {%- if fiveSizesMin contains startsWith -%}
              {%- assign fiveItems = fiveItems | append: customRadioItem -%}
            {%- elsif fiveSizesMax contains startsWith -%}
              {%- assign fiveExcess = fiveExcess | append: customRadioItem -%}
            {%- endif -%}

          {%- elsif startsWith contains "6'" -%}
            {%- if sixSizesMin contains startsWith -%}
              {%- assign sixItems = sixItems | append: customRadioItem -%}
            {%- elsif sixSizesMax contains startsWith -%}
              {%- assign sixExcess = sixExcess | append: customRadioItem -%}
            {%- endif -%}

          {%- elsif startsWith contains "7'" -%}
            {%- if sevenSizesMin contains startsWith -%}
              {%- assign sevenItems = sevenItems | append: customRadioItem -%}
            {%- elsif sevenSizesMax contains startsWith -%}
              {%- assign sevenExcess = sevenExcess | append: customRadioItem -%}
            {%- endif -%}

          {%- elsif startsWith contains "8'" -%}
            {%- if eightSizesMin contains startsWith -%}
              {%- assign eightItems = eightItems | append: customRadioItem -%}
            {%- elsif eightSizesMax contains startsWith -%}
              {%- assign eightExcess = eightExcess | append: customRadioItem -%}
            {%- endif -%}

          {%- endif -%}
        {%- endunless -%}
      {% endfor %}

      {%- comment -%}Display the additional manual grouping and sorting{%- endcomment -%}
      {{ fourItems }}
      {{ fourExcess }}
      
      {{ fiveItems }}
      {{ fiveExcess }}
      
      {{ sixItems }}
      {{ sixExcess }}
      
      {{ sevenItems }}
      {{ sevenExcess }}
      
      {{ eightItems }}
      {{ eightExcess }}
    </div>
  </div>
{%- endcapture -%}

{%- form 'product', product, class: 'ProductForm' -%}
  <div class="ProductForm__Variants {% if showSizeRadio %}has-custom-radio{% endif %}" data-variant="{{ product.options_with_values  | json | escape }}">
    {% if showSizeRadio %}
      {{sizeRadio}}
    {% endif %}
    {%- unless product.has_only_default_variant -%}
      {%- for option in product.options_with_values -%}
        {%- assign downcase_option = option.name | downcase -%}

        {%- if section.settings.selector_mode == 'block' or color_label contains downcase_option and section.settings.show_color_swatch -%}
          {%- assign show_option_label = true -%}
        {%- endif -%}
      {%- endfor -%}

      {%- for option in product.options_with_values -%}
        {%- assign downcase_option = option.name | downcase -%}
        {%- capture popover_id -%}popover-{{ product.id }}-{{ section.id }}-{{ option.name | handle }}{%- endcapture -%}
        {%- for v in option.values -%}
        {% capture length %}{{ forloop.length }}{% endcapture %}
        {% endfor %}
        {%- unless length == "1" and downcase_option == 'colour' or downcase_option=='color'-%}
          <div class="ProductForm__Option ProductForm__Option--colors {% if show_option_label %}ProductForm__Option--labelled{% endif %} option--{{downcase_option}}">
            {%- if show_option_label -%}
              {%- assign size_chart_page = pages['size-chart'] -%}

              <span class="ProductForm__Label">
                {{ option.name }}:

                {% if color_label contains downcase_option and section.settings.show_color_swatch %}
                  <span class="ProductForm__SelectedValue">{{ option.selected_value }}</span>
                {% endif %}

                {%- if size_label contains downcase_option and size_chart_page != empty -%}
                  <button type="button" class="ProductForm__LabelLink Link Text--subdued" data-action="open-modal" aria-controls="modal-{{ size_chart_page.handle }}">
                  {{- 'product.form.size_chart' | t -}}
                </button>
                {%- endif -%}
              </span>
            {%- endif -%}

            {%- if color_label contains downcase_option and section.settings.show_color_swatch -%}
              <ul class="ColorSwatchList HorizontalList HorizontalList--spacingTight">
                {%- for value in option.values -%}
                  {%- assign downcase_value = value | downcase -%}

                  <li class="HorizontalList__Item">
                    {%- assign color_swatch_name = value | handle | append: '.png' -%}
                    {%- assign color_swatch_image = images[color_swatch_name] -%}

                    <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="ColorSwatch__Radio" type="radio" name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}" {% if value == option.selected_value %}checked="checked"{% endif %} data-option-position="{{ option.position }}">
                    <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="ColorSwatch ColorSwatch--large {% if downcase_value == 'white' %}ColorSwatch--white{% endif %}" data-tooltip="{{ value | escape }}" style="background-color: {{ value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}">
                      <span class="u-visually-hidden">{{ value }}</span>
                    </label>
                  </li>
                {%- endfor -%}
              </ul>
            {%- elsif section.settings.selector_mode == 'block' -%}
              <ul class="SizeSwatchList HorizontalList HorizontalList--spacingTight">
                {%- for value in option.values -%}
                  <li class="HorizontalList__Item">
                    <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch__Radio" type="radio" name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}" {% if value == option.selected_value %}checked="checked"{% endif %} data-option-position="{{ option.position }}">
                    <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch">{{ value }}</label>
                  </li>
                {%- endfor -%}
              </ul>
            {%- else -%}
              <button type="button" class="ProductForm__Item" aria-expanded="false" aria-controls="{{ popover_id }}">
                <span class="ProductForm__OptionName">{% unless show_option_label %}{{ option.name }}: {% endunless %}<span class="ProductForm__SelectedValue">{{ option.selected_value }}</span></span>
                {%- render 'icon' with 'select-arrow' -%}
              </button>

              {%- capture popover_html -%}
                {%- if color_label contains downcase_option and section.settings.show_color_carousel -%}
                  {%- for value in option.values -%}
                    {%- if value == option.selected_value -%}
                      {%- assign initial_image_index = forloop.index0 -%}
                      {%- break -%}
                    {%- endif -%}
                  {%- endfor -%}

                  {%- capture flickity_options -%}
                  {
                    "prevNextButtons": true,
                    "pageDots": true,
                    "initialIndex": {{ initial_image_index }},
                    "arrowShape": {"x0": 20, "x1": 60, "y1": 40, "x2": 60, "y2": 35, "x3": 25}
                  }
                  {%- endcapture -%}

                  <div id="{{ popover_id }}" class="VariantSelector" aria-hidden="true">
                    {%- capture option_index -%}option{{ option.position }}{%- endcapture -%}

                    {%- assign option_indexes_excluded_color = '' -%}
                    {%- assign selected_variant_title_excluded_color = '' -%}

                    {%- for option_nested in product.options_with_values -%}
                      {%- if option_nested.position != option.position -%}
                        {%- assign option_indexes_excluded_color = option_indexes_excluded_color | append: option_nested.position | append: ',' -%}

                        {%- for option_nested_value in option_nested.values -%}
                          {%- if option_nested_value == option_nested.selected_value -%}
                            {%- assign selected_variant_title_excluded_color = selected_variant_title_excluded_color | append: option_nested_value -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}
                    {%- endfor -%}

                    {%- assign option_indexes_excluded_color = option_indexes_excluded_color | split: ',' | compact -%}

                    <div class="VariantSelector__Carousel Carousel" data-flickity-config='{{ flickity_options }}'>
                      {%- for value in option.values -%}
                        <div class="VariantSelector__Item Carousel__Cell {% if value == option.selected_value %}is-selected{% endif %}"
                            data-background-color="{{ value | split: ' ' | last | handle }}"
                            data-background-image="{{ value | handle | append: '.png' | asset_url }}"
                            data-option-position="{{ option.position }}"
                            data-option-value="{{ value | escape }}">
                          {%- for variant in product.variants -%}
                            {%- if variant[option_index] == value -%}
                              {%- assign variant_image = variant.image | default: product.featured_image -%}

                              {%- assign variant_title_excluded_color = '' -%}
                              {%- for option_index_excluded_color in option_indexes_excluded_color -%}
                                {%- capture sub_option_index -%}option{{ option_index_excluded_color }}{%- endcapture -%}
                                {%- assign variant_title_excluded_color = variant_title_excluded_color | append: variant[sub_option_index] -%}
                              {%- endfor -%}

                              <div data-variant-title="{{ variant_title_excluded_color | escape }}" class="VariantSelector__ImageWrapper AspectRatio AspectRatio--withFallback" aria-hidden="{% if selected_variant_title_excluded_color == variant_title_excluded_color %}false{% else %}true{% endif %}" style="max-width: {{ variant_image.width }}px; padding-bottom: {{ 100.0 | divided_by: variant_image.aspect_ratio }}%; --aspect-ratio: {{ variant_image.aspect_ratio }}">
                                {%- capture supported_sizes -%}{%- render 'image-size', sizes: '200,400,600,800', image: variant_image -%}{%- endcapture -%}
                                {%- assign image_url = variant_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                                <img class="VariantSelector__Image Image--lazyLoad Image--fadeIn" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" alt="{{ variant_image.alt | escape }}">
                                <span class="Image__Loader"></span>
                              </div>
                            {%- endif -%}
                          {%- endfor -%}
                        </div>
                      {%- endfor -%}
                    </div>

                    <div class="VariantSelector__Info">
                      <div class="VariantSelector__ChoiceList">
                        {%- for value in option.values -%}
                          {%- assign min_price_for_variant = product.price_max -%}

                          {%- for variant in product.variants -%}
                            {%- if variant[option_index] == value -%}
                              {%- assign min_price_for_variant = min_price_for_variant | at_most: variant.price -%}
                            {%- endif -%}
                          {%- endfor -%}

                          <div class="VariantSelector__Choice {% if value == option.selected_value %}is-selected{% endif %}">
                            <div class="VariantSelector__ChoiceColor">
                              {%- assign downcase_value = value | downcase -%}

                              {%- assign color_swatch_name = value | handle | append: '.png' -%}
                              {%- assign color_swatch_image = images[color_swatch_name] -%}

                              <span class="VariantSelector__ColorSwatch {% if downcase_value == 'white' %}VariantSelector__ColorSwatch--white{% endif %}" style="background-color: {{ value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}"></span>
                              <span class="VariantSelector__ChoiceValue">{{ value }}</span>
                            </div>

                            <div class="VariantSelector__ChoicePrice" data-color-position="{{ option.position }}">
                              {%- if available_prices_for_option_value.size > 1 -%}
                                {%- capture formatted_min_price -%}<span>{{ min_price_for_variant | money_without_trailing_zeros }}</span>{%- endcapture -%}
                                <span class="Heading Text--subdued">{{ 'product.form.from_price_html' | t: min_price: formatted_min_price }}</span>
                              {%- else -%}
                                <span class="Heading Text--subdued">{{ min_price_for_variant | money_without_trailing_zeros }}</span>
                              {%- endif -%}
                            </div>
                          </div>
                        {%- endfor -%}
                      </div>

                      <button type="button" class="VariantSelector__Button Button Button--primary Button--full" data-action="select-variant">{{- 'product.form.select_model' | t -}}</button>
                    </div>
                  </div>
                {%- else -%}
                  <div id="{{ popover_id }}" class="OptionSelector Popover Popover--withMinWidth" aria-hidden="true">
                    <header class="Popover__Header">
                      <button type="button" class="Popover__Close Icon-Wrapper--clickable" data-action="close-popover">{% render 'icon' with 'close' %}</button>
                      <span class="Popover__Title Heading u-h4">{{ option.name | escape }}</span>
                    </header>

                    <div class="Popover__Content">
                      <div class="Popover__ValueList" data-scrollable>
                        {%- for value in option.values -%}
                            <button type="button" class="Popover__Value {% if value == option.selected_value %}is-selected{% endif %} Heading Link Link--primary u-h6"
                            data-value="{{ value | escape }}"
                            data-option-position="{{ option.position }}"
                            data-action="select-value">
                              {{- value | escape -}}
                          </button>
                        {%- endfor -%}
                      </div>

                      {%- assign size_chart_page = pages['size-chart'] -%}

                      {%- if show_option_label == false and size_label contains downcase_option and size_chart_page != empty -%}
                        <button type="button" class="Popover__FooterHelp Heading Link Link--primary Text--subdued u-h6" data-action="open-modal" aria-controls="modal-{{ size_chart_page.handle }}">
                          {{- 'product.form.size_chart' | t -}}
                        </button>
                      {%- endif -%}
                    </div>
                  </div>
                {%- endif -%}
              {%- endcapture -%}

              {%- assign product_popovers = product_popovers | append: popover_html -%}
            {%- endif -%}
          </div>
        {%- endunless -%}
      {%- endfor -%}
      <div class="no-js ProductForm__Option">
        <div class="Select Select--primary">
          {%- render 'icon' with 'select-arrow' -%}

          <select id="product-select-{{ product.id }}" name="id" title="Variant">
            {%- for variant in product.variants -%}
              <option {% if variant == selected_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }} - {{ variant.price | money }}</option>
            {%- endfor -%}
          </select>
        </div>
      </div>

    {%- else -%}
      <input type="hidden" name="id" data-sku="{{ selected_variant.sku }}" value="{{ selected_variant.id }}">
    {%- endunless -%}

    {%- if section.settings.show_quantity_selector -%}
      {%- if show_option_label -%}
        <span class="ProductForm__Label">{{ 'product.form.quantity' | t }}:</span>
      {%- endif -%}

      <div class="ProductForm__QuantitySelector">
        <div class="QuantitySelector QuantitySelector--large">
          {%- assign quantity_minus_one = line_item.quantity | minus: 1 -%}

          <span class="QuantitySelector__Button Link Link--secondary" data-action="decrease-quantity">{% render 'icon' with 'minus' %}</span>
          <input type="text" class="QuantitySelector__CurrentQuantity" pattern="[0-9]*" name="quantity" value="1" aria-label="{{ 'product.form.quantity' | t }}">
          <span class="QuantitySelector__Button Link Link--secondary" data-action="increase-quantity">{% render 'icon' with 'plus' %}</span>
        </div>
      </div>
    {%- else -%}
      <input type="hidden" name="quantity" value="1">
    {%- endif -%}

    {%- if section.settings.show_inventory_quantity -%}
      {%- assign hide_inventory_quantity_by_default = false -%}
      
      {%- if selected_variant.inventory_management == blank or selected_variant.inventory_quantity <= 0 -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      {%- if section.settings.inventory_quantity_threshold != 0 and selected_variant.inventory_quantity > section.settings.inventory_quantity_threshold -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      <p class="ProductForm__Inventory Text--subdued" {% if hide_inventory_quantity_by_default %}style="display: none"{% endif %}>
        {%- if section.settings.inventory_quantity_threshold == 0 -%}
          {{- 'product.form.inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- else -%}
          {{- 'product.form.low_inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- endif -%}
      </p>
    {%- endif -%}
  </div>

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  ADD TO CART BUTTON
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}
  
  {%- if section.settings.show_payment_button == false or product.selling_plan_groups.size > 0 -%}
    {%- assign use_primary_button = true -%}
  {%- else -%}
    {%- assign use_primary_button = false -%}
  {%- endif -%}
  {%- comment -%}
  Brauz app custom code part1 stars. do not modify!!! details in WR-212
  {%- endcomment -%}
  <div class="add-to-cart-and-find-in-store-container product-form__buttons">
    <button type="submit" data-use-primary-button="{% if use_primary_button %}true{% else %}false{% endif %}" class="ProductForm__AddToCart Button {% if selected_variant.available and use_primary_button %}Button--primary{% else %}Button--secondary{% endif %} Button--full" {% if selected_variant.available %}data-action="add-to-cart"{% else %}disabled="disabled"{% endif %}>
    {%- if selected_variant.available -%}
      <span>{% if product.template_suffix == 'pre-order' %}{{ 'product.form.pre_order' | t }}{% else %}{{ 'product.form.add_to_cart' | t }}{% endif %}</span>

    {%- if section.settings.show_price_in_button -%}
      <span class="Button__SeparatorDot"></span>
      <span>{{ selected_variant.price | money_without_trailing_zeros }}</span>
    {%- endif -%}
    {%- else -%}
      {{- 'product.form.sold_out' | t -}}
    {%- endif -%}
    </button>

    <button type="button" class="ProductForm__AddToCart Button Button--primary Button--full find-in-store" onclick="window.Brauz_open_store_selector_dialog()">
      Find in Store
    </button>
  </div>
  {%- comment -%}
  Brauz app custom code part1 end. details in WR-212
  {%- endcomment -%}

  <!-- <button type="submit" data-use-primary-button="{% if use_primary_button %}true{% else %}false{% endif %}" class="ProductForm__AddToCart Button {% if selected_variant.available and use_primary_button %}Button--primary{% else %}Button--secondary{% endif %} Button--full" {% if selected_variant.available %}data-action="add-to-cart"{% else %}disabled="disabled"{% endif %}>
    {%- if selected_variant.available -%}
      <span>{% if product.template_suffix == 'pre-order' %}{{ 'product.form.pre_order' | t }}{% else %}{{ 'product.form.add_to_cart' | t }}{% endif %}</span>

      {%- if section.settings.show_price_in_button -%}
        <span class="Button__SeparatorDot"></span>
        <span>{{ selected_variant.price | money_without_trailing_zeros }}</span>
      {%- endif -%}
    {%- else -%}
      {{- 'product.form.sold_out' | t -}}
    {%- endif -%}
  </button> -->

{% comment %}  {%- if section.settings.show_payment_button and product.template_suffix != 'pre-order' -%}
    {{ form | payment_button }}
  {%- endif -%} {% endcomment %}

  {%- comment -%}
  Brauz app custom code part2 starts. Do not modify!!! details in WR-212
  {%- endcomment -%}
  <div
  id="brauz-click-collect-product-page"
  data-id="eyJncm91cF9udW1iZXIiOiJXUlBMX21HUUQiLCJzaG9waWZ5X2RvbWFpbiI6ImJvYXJkY29sbGVjdGl2ZS5teXNob3BpZnkuY29tIn0="
  data-cvi="{{current_variant.id}}"
  data-hodv="{{product.has_only_default_variant}}"
  ></div>
  <script src="https://d3aq2u4yw77ivo.cloudfront.net/click-and-collect/board-collective/1.0/click_and_collect.shopify.boardcollective.prod.js" async></script>
  {%- comment -%}
  Brauz app custom code part2 end. details in WR-212
  {%- endcomment -%}

  {%- comment -%}The availability container will be added automatically if there is store pickup available{%- endcomment -%}
  {%- if section.settings.show_pickup_availability -%}
    <div class="ProductMeta__StoreAvailabilityContainer"></div>
  {%- endif -%}
{%- endform -%}

{%- if size_chart_page != empty -%}
  {%- comment -%}If we have a size chart we capture the modal content (it must be displayed outside the form for proper positioning){%- endcomment -%}

  {%- capture product_modals -%}
    <div id="modal-{{ size_chart_page.handle }}" class="Modal Modal--dark Modal--fullScreen Modal--pageContent" aria-hidden="true" role="dialog" data-scrollable>
      <header class="Modal__Header">
        <h2 class="Modal__Title Heading u-h1">{{ size_chart_page.title }}</h2>
      </header>

      <div class="Modal__Content Rte">
        <div class="Container Container--extraNarrow">
          {{- size_chart_page.content -}}
        </div>
      </div>

      <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom data-action="close-modal">{% render 'icon' with 'close' %}</button>
    </div>
  {%- endcapture -%}
{%- endif -%}

{%- if section.settings.show_payment_button and selected_variant.available == false -%}
  <style>
    #shopify-section-{{ section.id }} .shopify-payment-button {
      display: none;
    }
  </style>
{%- endif -%}

{%- comment -%}
--------------------------------------------------------------------------------------------------------------------
OFF SCREEN ELEMENTS

Implementation note: in the past (with "include") we could accumulate the data and output it outside the snippet
itself. However with the new "render" tag, everything that is captured inside cannot be used outside the snippet
itself. As a consequence we are moving them in JavaScript. This allows to make sure that those elements are upper
in the DOM tree, and do not show below the content
--------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}

<div class="Product__OffScreen">
  {{- product_popovers -}}
  {{- product_modals -}}
</div>

{% comment %}
------------------------------------------------------------------------------
Product Data. This must be outputted for all products (including home page).

IMPORTANT: THIS CODE IS VITAL. DO NOT EDIT IT NOT REMOVE IT. MAKE SURE TO KEEP
THE EXACT SAME ATTRIBUTES.
------------------------------------------------------------------------------
{% endcomment %}

<script type="application/json" data-product-json>
  {
    "product": {{ product | json }},
    "selected_variant_id": {{ selected_variant.id }}
    {%- if section.settings.show_inventory_quantity -%}
      ,"inventories": {
        {%- for variant in product.variants -%}
          {%- assign inventory_message = '' -%}

          {%- if section.settings.inventory_quantity_threshold == 0 -%}
            {%- capture inventory_message -%}{{- 'product.form.inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- else -%}
            {%- capture inventory_message -%}{{- 'product.form.low_inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- endif -%}

          "{{ variant.id }}": {
            "inventory_management": {{ variant.inventory_management | json }},
            "inventory_policy": {{ variant.inventory_policy | json }},
            "inventory_quantity": {{ variant.inventory_quantity | json }},
            "inventory_message": {{ inventory_message | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      }
    {%- endif -%}
  }
</script>

<script>
  // if ($('.swatch-label').length){
  //   $('.swatch-label .swatch-option-name').hide()
  //   $('.swatch-label .swatch-split-symbol').hide()
  // }
</script>